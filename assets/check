#!/usr/bin/env bash

CURDIR=$(exec 2>/dev/null;cd -- "$(dirname "${BASH_SOURCE[0]}")"; unset PWD; /usr/bin/pwd || /bin/pwd || pwd)

set -e
set -o pipefail

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

# shellcheck source=/dev/null
. "$CURDIR/common"

# Read inputs.
payload=$(mktemp "$TMPDIR/kangal-request.XXXXXX")
cat > "$payload" <&0

# Prepare.
proxyHost=$(jq -r '.source.proxy_host // ""' < "$payload")
tags=$(jq -r '[(.source.tags // {}) | to_entries[] | "\(.key):\(.value)"] | join(",")' < "$payload")
phase=$(jq -r '.source.phase // ""' < "$payload")

if [[ -n "$proxyHost" ]]; then
    KANGAL_PROXY_HOST="$proxyHost"
fi

# Get result.
loadTests=$(curl -s -XGET "http://$KANGAL_PROXY_HOST/load-test?tags=${tags}" 2>/dev/null | jq -c -M '[[.items[] | select(.tags.timestamp != null)] | sort_by(.tags.timestamp) | reverse[]]')

# Filter by phase.
if [[ -n "$phase" ]]; then
    loadTests=$(echo "$loadTests" | jq -c -M --arg phase "$phase" '[.[] | select(.phase == $phase)]')
fi

# Convert load test payload to resource version.
result='[]'

while read -r loadTest; do
    result=$(echo "$result" | jq -c -M --argjson version "$(get_version "$loadTest")" '.[.|length] = $version')
done < <(echo "$loadTests" | jq -c -M '.[]')

echo "$result" >&3
